{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@datlechin/flarum-chatgpt/webpack/bootstrap","webpack://@datlechin/flarum-chatgpt/webpack/runtime/compat get default export","webpack://@datlechin/flarum-chatgpt/webpack/runtime/define property getters","webpack://@datlechin/flarum-chatgpt/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-chatgpt/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@datlechin/flarum-chatgpt/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@datlechin/flarum-chatgpt/./src/admin/components/ChatGPTSettings.tsx","webpack://@datlechin/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datlechin/flarum-chatgpt/./src/admin/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\n\nexport default class ChatGPTSettings extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = false;\n  }\n\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.api_key',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.api_key_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.api_key_help', {\n                a: <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              placeholder: 'sk-...',\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.model',\n              type: 'dropdown',\n              options: {\n                'text-davinci-003': 'text-davinci-003',\n                'gpt-3.5-turbo': 'gpt-3.5-turbo',\n                'gpt-3.5-turbo-16k': 'gpt-3.5-turbo-16k',\n                'text-davinci-002': 'text-davinci-002',\n                'code-davinci-002': 'code-davinci-002',\n                'gpt-4': 'gpt-4',\n                'gpt-4-0613': 'gpt-4-0613',\n                'gpt-4-32k': 'gpt-4-32k',\n                'gpt-4-32k-0613': 'gpt-4-32k-0613',\n                'gpt-4-0314': 'gpt-4-0314',\n                'gpt-4-32k-0314': 'gpt-4-32k-0314',\n              },\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.model_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.model_help', {\n                a: <a href=\"https://platform.openai.com/docs/models/overview\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.max_tokens',\n              type: 'number',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.max_tokens_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.max_tokens_help', {\n                a: <a href=\"https://help.openai.com/en/articles/4936856\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              default: 100,\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.user_prompt',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.user_prompt_badge_text',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_badge_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_badge_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.enable_on_discussion_started',\n              type: 'boolean',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.enable_on_discussion_started_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.enable_on_discussion_started_help'),\n            })}\n            {this.buildSettingComponent({\n              type: 'flarum-tags.select-tags',\n              setting: 'datlechin-chatgpt.enabled-tags',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.enabled_tags_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.enabled_tags_help'),\n              options: {\n                requireParentTag: false,\n                limits: {\n                  max: {\n                    secondary: 0,\n                  },\n                },\n              },\n            })}\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport ChatGPTSettings from './components/ChatGPTSettings';\n\napp.initializers.add('datlechin/flarum-chatgpt', () => {\n  app.extensionData\n    .for('datlechin-chatgpt')\n    .registerPermission(\n      {\n        label: app.translator.trans('datlechin-chatgpt.admin.permissions.use_chatgpt_assistant_label'),\n        icon: 'fas fa-comment',\n        permission: 'discussion.useChatGPTAssistant',\n        allowGuest: false,\n      },\n      'start'\n    )\n    .registerPage(ChatGPTSettings);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","ChatGPTSettings","_ExtensionPage","subClass","superClass","apply","arguments","create","constructor","_proto","oninit","vnode","this","loading","content","m","className","buildSettingComponent","setting","type","label","app","trans","help","href","target","rel","placeholder","options","default","requireParentTag","limits","max","secondary","submitButton","ExtensionPage","add","registerPermission","icon","permission","allowGuest","registerPage"],"sourceRoot":""}